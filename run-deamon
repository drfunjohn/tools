#!/usr/bin/env bash
# TODO: remove double quotes to run commnad in more native form
# TODO: add silent mode
# TODO: fix -p option in the "read -t"
# TODO: add list of changed files
# TODO: add option check known ports if they is not binded before run sever

wait=1 # seconds, delay before kill of process 

pid=""
pidlist=()
exec 2>&1
which fswatch
if [[ "$?" -ne "0" ]]; then
    echo "fswatch is not found or not installed "
    echo "Do you want to install fswatch? y/[n]:"
    read -n 1 -s char 
    echo "$char"
    if [[ "$char" = "y" ]]; then
        brew install fswatch
    else
        echo "I cannot continue, sorry..."
        exit 1
    fi 
fi

function pstree {
    local pid=$1
    local pids=()
    local regexp=""

    while [[ -n $pid ]]
    do
        pids+=( $pid )
        # Get PID by PPID
        # regexp="^.* $pid$"
        regexp="^.* $pid$"
        pid=$( ps -o pid,ppid= | grep -E "$regexp" | awk '{print $1;}' )
    done
    echo "${pids[@]}"
}

$1 &
pid=$! 
fswatch -r --event=Updated --event=Removed --event=Created -l 1 -o -e "\\.*" -i "\\.go$" -i "\\.mod$" -iI "/makefile" -i "\\.py$" . | (while read line
do
    pidlist=( $( pstree $pid ) )
    clear
    echo "== Run Deamon: Restart service ============================================="
    if [[ "$line" -gt "1" ]]; then 
        echo "$line files were changed"
    else 
        echo "$line file was changed"
    fi
    echo "Kill ${#pidlist[@]} processes with  next PIDs:  ${pidlist[@]}"
    echo "Wait $wait sec..."
    read -t 5 -s
    if [[ "${#pidlist[@]}" -gt "0" ]]; then 
        for p in ${pidlist[@]} 
        do
            kill -TERM -- $p 
        done
    fi
    pid=""
    pidlsit=()
    $1 &
    pid=$!
    echo "== Run Deamon: Service started ============================================="
done)

